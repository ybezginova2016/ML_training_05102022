# –ï—Å–ª–∏ –≤–µ–∫—Ç–æ—Ä—ã a=(ùë•_1, ùë¶_1)a=(x2, y2) –∏ b=(ùë•_2, ùë¶_2)b=(x
# –ø–æ—Å—Ç—Ä–æ–µ–Ω—ã –∏–∑ –æ–¥–Ω–æ–π —Ç–æ—á–∫–∏, –º–æ–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ–≤–∫–ª–∏–¥–æ–≤–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
# (–∞–Ω–≥–ª. Euclidian distance) –º–µ–∂–¥—É –Ω–∏–º–∏. –û–Ω–æ —Ä–∞–≤–Ω–æ –¥–ª–∏–Ω–µ –≤–µ–∫—Ç–æ—Ä–∞
# b-ab‚àía, —Ç–æ –µ—Å—Ç—å –º–æ–¥—É–ª—é —Ä–∞–∑–Ω–æ—Å—Ç–∏ –≤–µ–∫—Ç–æ—Ä–æ–≤.

import numpy as np

a = np.array([5, 6])
b = np.array([1, 3])
d = np.dot(a-b, a-b)**0.5
print('–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –≤–µ–∫—Ç–æ—Ä–∞–º–∏ a –∏ b —Ä–∞–≤–Ω–æ', d)

# –§–æ—Ä–º—É–ª—É –µ–≤–∫–ª–∏–¥–æ–≤–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è –≤–µ–∫—Ç–æ—Ä–∞–º–∏ –º–æ–∂–Ω–æ
# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏. –î–ª—è —ç—Ç–æ–≥–æ
# –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤–µ–∫—Ç–æ—Ä—ã –∏–∑ –Ω—É–ª—è –≤ —ç—Ç–∏ —Ç–æ—á–∫–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
# –º–µ–∂–¥—É –≤–µ–∫—Ç–æ—Ä–∞–º–∏.


# –î–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –≤ SciPy –µ—Å—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ distance
# (–∞–Ω–≥–ª. ¬´—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ¬ª). –ê –µ–≤–∫–ª–∏–¥–æ–≤–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–æ–∂–Ω–æ –≤—ã—á–∏—Å–ª–∏—Ç—å
# —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ distance.euclidean():

import numpy as np
from scipy.spatial import distance

a = np.array([5, 6])
b = np.array([1, 3])
d = distance.euclidean(a, b)
print('–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ a –∏ b —Ä–∞–≤–Ω–æ', d)

# –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä. –ö–æ–º–ø–∞–Ω–∏—è ¬´–î—Ä–æ–Ω –ì–æ—Ä—ã–Ω—ã—á¬ª –∏–∑ –¥–µ—Ä–µ–≤–Ω–∏ –¢–µ—Ç–µ—Ä—å–µ
# –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –¥—Ä–æ–Ω–∞–º–∏. –ü—Ä–∏–º–µ–º –¢–µ—Ç–µ—Ä—å–µ –∑–∞ –Ω–∞—á–∞–ª–æ –æ—Ç—Å—á—ë—Ç–∞.
# –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç–ª–æ–∂–∏–º –ø–æ –æ—Å—è–º XX –∏ YY
# –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö.

# –ß—Ç–æ–±—ã —Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç –¥—Ä–æ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
# –≤ —Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
# x_axis ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞–∂–¥–æ–≥–æ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø–æ –æ—Å–∏ XX;
# y_axis ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –æ—Å–∏ YY;
# shipments ‚Äî —Å—Ä–µ–¥–Ω–µ–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫ –≤ –∫–∞–∂–¥—ã–π –≥–æ—Ä–æ–¥.
# –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –æ–±—ä–µ–¥–∏–Ω–∏–º –≤ –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–µ –∏ –≤—ã–≤–µ–¥–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω:

import numpy as np
import pandas as pd

# –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –æ—Å–∏ X
x_axis = np.array([0., 0.18078584, 9.32526599, 17.09628721,
                      4.69820241, 11.57529305, 11.31769349, 14.63378951])

# –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –æ—Å–∏ Y
y_axis  = np.array([0.0, 7.03050245, 9.06193657, 0.1718145,
                      5.1383203, 0.11069032, 3.27703365, 5.36870287])

# –∞–Ω–≥–ª. –¥–æ—Å—Ç–∞–≤–∫–∏
shipments = np.array([5, 7, 4, 3, 5, 2, 1, 1])

# –∞–Ω–≥–ª. –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç
village = ['–¢–µ—Ç–µ—Ä—å–µ',
           '–ñ—É—Ä–∞–≤–µ—Ü',
           '–ö–æ—Ä—Å—É–Ω—å',
           '–ë–µ—Ä—ë–∑–æ–≤–∫–∞',
           '–ü—Ä–æ—Ç–∞—Å–æ–≤–æ',
           '–¢—Ä—É–¥–∫–∏',
           '–ù–∏–∂–Ω–∏–π –¢—É—Ä–æ–≤–µ—Ü',
           '–í—ã—à–Ω–∏–π –¢—É—Ä–æ–≤–µ—Ü']

data = pd.DataFrame({'x_coordinates_km': x_axis,
                     'y_coordinates_km': y_axis,
                     'deliveries': shipments}, index=village)

print(data)

# –†–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –ø—É–Ω–∫—Ç–∞–º–∏ —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º —á–µ—Ä–µ–∑ –¥–ª–∏–Ω—ã –≤–µ–∫—Ç–æ—Ä–æ–≤.
# –î–ª—è —ç—Ç–æ–≥–æ –∏–∑–≤–ª–µ—á—ë–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–µ–∫ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é vectors.
vectors = data[['x_coordinates_km', 'y_coordinates_km']].values
print(vectors)

###### TASK 1 #######
# 1. –ü–æ—Å—Ç—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –º–µ–∂–¥—É –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–º–∏ –ø—É–Ω–∫—Ç–∞–º–∏ –∏
# —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ—ë –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π distances. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∫
# —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤. –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –æ–¥–Ω–æ–≥–æ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ
# –ø—É–Ω–∫—Ç–∞ –¥–æ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö.

# –î–æ–±–∞–≤—å—Ç–µ –≤ —Ç–∞–±–ª–∏—Ü—É distances –Ω–∞–∑–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å—ë–ª –∏ –¥–µ—Ä–µ–≤–µ–Ω—å.
# –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∑–¥–µ—Å—å –∫–æ–ª–æ–Ω–∫–∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –Ω–µ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º
# Python ‚Äî –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –∏ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã. –ù–∞–∑–≤–∞–Ω–∏—è –¥–µ—Ä–µ–≤–µ–Ω—å
# –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ –≤—ã–≥–ª—è–¥—è—Ç –Ω–µ—á–∏—Ç–∞–±–µ–ª—å–Ω–æ, –∞ –∫–æ–¥ –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å –Ω–µ
# —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä, –Ω–æ –∏ –¥—Ä—É–≥–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏.

import numpy as np
import pandas as pd
from scipy.spatial import distance

x_axis = np.array([0.0, 0.18078584, 9.32526599, 17.09628721,
                   4.69820241, 11.57529305, 11.31769349, 14.63378951])

y_axis = np.array([0.0, 7.03050245, 9.06193657, 0.1718145,
                   5.1383203, 0.11069032, 3.27703365, 5.36870287])

shipments = np.array([5, 7, 4, 3, 5, 2, 1, 1])

village = ['–¢–µ—Ç–µ—Ä—å–µ',
           '–ñ—É—Ä–∞–≤–µ—Ü',
           '–ö–æ—Ä—Å—É–Ω—å',
           '–ë–µ—Ä—ë–∑–æ–≤–∫–∞',
           '–ü—Ä–æ—Ç–∞—Å–æ–≤–æ',
           '–¢—Ä—É–¥–∫–∏',
           '–ù–∏–∂–Ω–∏–π –¢—É—Ä–æ–≤–µ—Ü',
           '–í—ã—à–Ω–∏–π –¢—É—Ä–æ–≤–µ—Ü']

data = pd.DataFrame({'x_coordinates_km': x_axis,
                     'y_coordinates_km': y_axis,
                     'deliveries': shipments}, index=village)

vectors = data[['x_coordinates_km', 'y_coordinates_km']].values
print(vectors)

distances = []
for village_from in range(len(village)):
    row = []
    for village_to in range(len(village)):
        value = distance.euclidean(vectors[village_to], vectors[village_from])
        row.append(value)
    distances.append(row)

distances_df = pd.DataFrame(distances, index=village, columns=village)
print(distances_df)

# 2. –í—ã –∑–Ω–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤ –∫–∞–∂–¥—É—é —Ç–æ—á–∫—É.
# –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –¥–ª—è —Å–∫–ª–∞–¥–∞ –∫–æ–º–ø–∞–Ω–∏–∏ ¬´–î—Ä–æ–Ω –ì–æ—Ä—ã–Ω—ã—á¬ª –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π
# –ø—É–Ω–∫—Ç. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–π–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –ø—É–Ω–∫—Ç–∞–º–∏, —É–¥–≤–æ–π—Ç–µ –µ–≥–æ
# (–ø–æ–ª—ë—Ç—ã —Ç—É–¥–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ) –∏ —É–º–Ω–æ–∂—å—Ç–µ –Ω–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
# –¥–æ—Å—Ç–∞–≤–æ–∫. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ø–∏—Å–∫–µ shipping_in_week.
# –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç —Å –Ω–∞–∏–º–µ–Ω—å—à–µ–π —Å—É–º–º–∞—Ä–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–µ–π –¥–æ
# —Å–æ—Å–µ–¥–µ–π. –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω.

# –ï—Å–ª–∏ —Å–∫–ª–∞–¥ –≤ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ —Å –∏–Ω–¥–µ–∫—Å–æ–º i, —Ç–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É
# —Å—ë–ª–∞–º–∏ –º–æ–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å —Å–∫–∞–ª—è—Ä–Ω—ã–º –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º:
# 2 * np.dot(np.array(distances[i]), shipments).
# –ß—Ç–æ–±—ã –≤—ã—á–∏—Å–ª–∏—Ç—å –∏–Ω–¥–µ–∫—Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è,
# –≤—ã–∑–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ idxmin() (–∞–Ω–≥–ª. ¬´–∏–Ω–¥–µ–∫—Å –º–∏–Ω–∏–º—É–º–∞¬ª).
# –ù–∞–π–¥–∏—Ç–µ –µ–≥–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.

shipping_in_week = []
for i in range(len(village)):
    dist = 2 * np.dot(np.array(distances[i]), shipments)
    shipping_in_week.append(dist)

shipping_in_week_df = pd.DataFrame({'distance': shipping_in_week}, index=village)

print(shipping_in_week_df)

print()
print()
# –æ–±—Ä–∞—Ç–∏–º—Å—è –∫ —Å–µ—Ä–∏–∏ –∏ –≤—ã–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü
print('–ù–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –¥–ª—è —Å–∫–ª–∞–¥–∞:', shipping_in_week_df.idxmin().values[0])
# https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.idxmin.html